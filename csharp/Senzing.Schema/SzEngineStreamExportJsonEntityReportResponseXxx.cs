// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1
#pragma warning disable CS8601, CS8618

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Senzing.Schema
{
    [JsonConverter(typeof(SzEngineStreamExportJsonEntityReportResponseXxxJsonConverter))]
    public class SzEngineStreamExportJsonEntityReportResponseXxx
    {
        /// <summary>
        /// The underlying data being wrapped.
        /// </summary>
        public StreamExportJsonEntity Value { get; set; }
    }

    public class SzEngineStreamExportJsonEntityReportResponseXxxJsonConverter : JsonConverter<SzEngineStreamExportJsonEntityReportResponseXxx>
    {
        public override SzEngineStreamExportJsonEntityReportResponseXxx Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            return new SzEngineStreamExportJsonEntityReportResponseXxx { Value = JsonSerializer.Deserialize<StreamExportJsonEntity>(ref reader, options) };
        }

        public override void Write(Utf8JsonWriter writer, SzEngineStreamExportJsonEntityReportResponseXxx value, JsonSerializerOptions options)
        {
            JsonSerializer.Serialize<StreamExportJsonEntity>(writer, value.Value, options);
        }
    }
}
