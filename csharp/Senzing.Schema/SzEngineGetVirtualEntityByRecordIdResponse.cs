// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Senzing.Schema
{
    [JsonConverter(typeof(SzEngineGetVirtualEntityByRecordIdResponseJsonConverter))]
    public class SzEngineGetVirtualEntityByRecordIdResponse
    {
        /// <summary>
        /// The underlying data being wrapped.
        /// </summary>
        public VirtualEntity Value { get; set; }
    }

    public class SzEngineGetVirtualEntityByRecordIdResponseJsonConverter : JsonConverter<SzEngineGetVirtualEntityByRecordIdResponse>
    {
        public override SzEngineGetVirtualEntityByRecordIdResponse Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            return new SzEngineGetVirtualEntityByRecordIdResponse { Value = JsonSerializer.Deserialize<VirtualEntity>(ref reader, options) };
        }

        public override void Write(Utf8JsonWriter writer, SzEngineGetVirtualEntityByRecordIdResponse value, JsonSerializerOptions options)
        {
            JsonSerializer.Serialize<VirtualEntity>(writer, value.Value, options);
        }
    }
}
