// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1
#pragma warning disable CS8601, CS8618

using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace Senzing.Typedef
{
    /// <summary>
    /// FIXME: ...
    /// </summary>
    public class RelatedEntity
    {
        /// <summary>
        /// The ENTITY_ID is the identifier for the entity.
        /// </summary>
        [JsonPropertyName("ENTITY_ID")]
        public int EntityId { get; set; }

        /// <summary>
        /// An arbitrarily selected name for the entity.
        /// </summary>
        [JsonPropertyName("ENTITY_NAME")]
        public string EntityName { get; set; }

        /// <summary>
        /// Identifier of the entity resolution principle that was triggered.
        /// </summary>
        [JsonPropertyName("ERRULE_CODE")]
        public string ErruleCode { get; set; }

        /// <summary>
        /// Indicates if this is an ambiguous relationship.
        /// </summary>
        [JsonPropertyName("IS_AMBIGUOUS")]
        public int IsAmbiguous { get; set; }

        /// <summary>
        /// Indicates if this is a disclosed relationship.
        /// </summary>
        [JsonPropertyName("IS_DISCLOSED")]
        public int IsDisclosed { get; set; }

        /// <summary>
        /// Representation of matched source data.
        /// </summary>
        [JsonPropertyName("MATCH_KEY")]
        public string MatchKey { get; set; }

        [JsonPropertyName("MATCH_KEY_DETAILS")]
        public MatchKeyDetails MatchKeyDetails { get; set; }

        /// <summary>
        /// The type of relationship.
        /// </summary>
        [JsonPropertyName("MATCH_LEVEL_CODE")]
        public string MatchLevelCode { get; set; }

        /// <summary>
        /// A list of (data source code, record id) pairs.
        /// </summary>
        [JsonPropertyName("RECORDS")]
        public IList<Record> Records { get; set; }

        /// <summary>
        /// A list of tabulated counts of records by source.
        /// </summary>
        [JsonPropertyName("RECORD_SUMMARY")]
        public IList<RecordSummary> RecordSummary { get; set; }

        /// <summary>
        /// A list of record types on the entity as defined in the Entity
        /// Specification.
        /// </summary>
        [JsonPropertyName("RECORD_TYPES")]
        public IList<string> RecordTypes { get; set; }
    }
}
