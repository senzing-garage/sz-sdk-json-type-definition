// Code generated by jtd-codegen for Java + Jackson v0.2.1

package com.senzing.schema;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

@JsonSerialize
public class ProcessingDetails {
    @JsonProperty("addedRecords")
    private Integer addedRecords;

    @JsonProperty("candidates")
    private Integer candidates;

    @JsonProperty("changeDeletes")
    private Integer changeDeletes;

    @JsonProperty("duration")
    private Integer duration;

    @JsonProperty("filteredObsFeat")
    private Integer filteredObsFeat;

    @JsonProperty("newObsEnt")
    private Integer newObsEnt;

    @JsonProperty("obsEntHashDiff")
    private Integer obsEntHashDiff;

    @JsonProperty("obsEntHashSame")
    private Integer obsEntHashSame;

    @JsonProperty("optimizedOut")
    private Integer optimizedOut;

    @JsonProperty("optimizedOutSkipped")
    private Integer optimizedOutSkipped;

    @JsonProperty("partiallyResolved")
    private Integer partiallyResolved;

    @JsonProperty("retries")
    private Integer retries;

    public ProcessingDetails() {
    }

    /**
     * Getter for addedRecords.<p>
     */
    public Integer getAddedRecords() {
        return addedRecords;
    }

    /**
     * Setter for addedRecords.<p>
     */
    public void setAddedRecords(Integer addedRecords) {
        this.addedRecords = addedRecords;
    }

    /**
     * Getter for candidates.<p>
     */
    public Integer getCandidates() {
        return candidates;
    }

    /**
     * Setter for candidates.<p>
     */
    public void setCandidates(Integer candidates) {
        this.candidates = candidates;
    }

    /**
     * Getter for changeDeletes.<p>
     */
    public Integer getChangeDeletes() {
        return changeDeletes;
    }

    /**
     * Setter for changeDeletes.<p>
     */
    public void setChangeDeletes(Integer changeDeletes) {
        this.changeDeletes = changeDeletes;
    }

    /**
     * Getter for duration.<p>
     */
    public Integer getDuration() {
        return duration;
    }

    /**
     * Setter for duration.<p>
     */
    public void setDuration(Integer duration) {
        this.duration = duration;
    }

    /**
     * Getter for filteredObsFeat.<p>
     */
    public Integer getFilteredObsFeat() {
        return filteredObsFeat;
    }

    /**
     * Setter for filteredObsFeat.<p>
     */
    public void setFilteredObsFeat(Integer filteredObsFeat) {
        this.filteredObsFeat = filteredObsFeat;
    }

    /**
     * Getter for newObsEnt.<p>
     */
    public Integer getNewObsEnt() {
        return newObsEnt;
    }

    /**
     * Setter for newObsEnt.<p>
     */
    public void setNewObsEnt(Integer newObsEnt) {
        this.newObsEnt = newObsEnt;
    }

    /**
     * Getter for obsEntHashDiff.<p>
     */
    public Integer getObsEntHashDiff() {
        return obsEntHashDiff;
    }

    /**
     * Setter for obsEntHashDiff.<p>
     */
    public void setObsEntHashDiff(Integer obsEntHashDiff) {
        this.obsEntHashDiff = obsEntHashDiff;
    }

    /**
     * Getter for obsEntHashSame.<p>
     */
    public Integer getObsEntHashSame() {
        return obsEntHashSame;
    }

    /**
     * Setter for obsEntHashSame.<p>
     */
    public void setObsEntHashSame(Integer obsEntHashSame) {
        this.obsEntHashSame = obsEntHashSame;
    }

    /**
     * Getter for optimizedOut.<p>
     */
    public Integer getOptimizedOut() {
        return optimizedOut;
    }

    /**
     * Setter for optimizedOut.<p>
     */
    public void setOptimizedOut(Integer optimizedOut) {
        this.optimizedOut = optimizedOut;
    }

    /**
     * Getter for optimizedOutSkipped.<p>
     */
    public Integer getOptimizedOutSkipped() {
        return optimizedOutSkipped;
    }

    /**
     * Setter for optimizedOutSkipped.<p>
     */
    public void setOptimizedOutSkipped(Integer optimizedOutSkipped) {
        this.optimizedOutSkipped = optimizedOutSkipped;
    }

    /**
     * Getter for partiallyResolved.<p>
     */
    public Integer getPartiallyResolved() {
        return partiallyResolved;
    }

    /**
     * Setter for partiallyResolved.<p>
     */
    public void setPartiallyResolved(Integer partiallyResolved) {
        this.partiallyResolved = partiallyResolved;
    }

    /**
     * Getter for retries.<p>
     */
    public Integer getRetries() {
        return retries;
    }

    /**
     * Setter for retries.<p>
     */
    public void setRetries(Integer retries) {
        this.retries = retries;
    }
}
