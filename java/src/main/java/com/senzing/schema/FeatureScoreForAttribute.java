// Code generated by jtd-codegen for Java + Jackson v0.2.1

package com.senzing.schema;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

@JsonSerialize
public class FeatureScoreForAttribute {
    @JsonProperty("ADDITIONAL_SCORES")
    private AdditionalScores additionalScores;

    @JsonProperty("CANDIDATE_FEAT_DESC")
    private String candidateFeatDesc;

    @JsonProperty("CANDIDATE_FEAT_ID")
    private Integer candidateFeatId;

    @JsonProperty("CANDIDATE_FEAT_USAGE_TYPE")
    private String candidateFeatUsageType;

    @JsonProperty("INBOUND_FEAT_DESC")
    private String inboundFeatDesc;

    @JsonProperty("INBOUND_FEAT_ID")
    private Integer inboundFeatId;

    @JsonProperty("INBOUND_FEAT_USAGE_TYPE")
    private String inboundFeatUsageType;

    @JsonProperty("SCORE")
    private Integer score;

    @JsonProperty("SCORE_BEHAVIOR")
    private String scoreBehavior;

    @JsonProperty("SCORE_BUCKET")
    private String scoreBucket;

    public FeatureScoreForAttribute() {
    }

    /**
     * Getter for additionalScores.<p>
     */
    public AdditionalScores getAdditionalScores() {
        return additionalScores;
    }

    /**
     * Setter for additionalScores.<p>
     */
    public void setAdditionalScores(AdditionalScores additionalScores) {
        this.additionalScores = additionalScores;
    }

    /**
     * Getter for candidateFeatDesc.<p>
     */
    public String getCandidateFeatDesc() {
        return candidateFeatDesc;
    }

    /**
     * Setter for candidateFeatDesc.<p>
     */
    public void setCandidateFeatDesc(String candidateFeatDesc) {
        this.candidateFeatDesc = candidateFeatDesc;
    }

    /**
     * Getter for candidateFeatId.<p>
     */
    public Integer getCandidateFeatId() {
        return candidateFeatId;
    }

    /**
     * Setter for candidateFeatId.<p>
     */
    public void setCandidateFeatId(Integer candidateFeatId) {
        this.candidateFeatId = candidateFeatId;
    }

    /**
     * Getter for candidateFeatUsageType.<p>
     */
    public String getCandidateFeatUsageType() {
        return candidateFeatUsageType;
    }

    /**
     * Setter for candidateFeatUsageType.<p>
     */
    public void setCandidateFeatUsageType(String candidateFeatUsageType) {
        this.candidateFeatUsageType = candidateFeatUsageType;
    }

    /**
     * Getter for inboundFeatDesc.<p>
     */
    public String getInboundFeatDesc() {
        return inboundFeatDesc;
    }

    /**
     * Setter for inboundFeatDesc.<p>
     */
    public void setInboundFeatDesc(String inboundFeatDesc) {
        this.inboundFeatDesc = inboundFeatDesc;
    }

    /**
     * Getter for inboundFeatId.<p>
     */
    public Integer getInboundFeatId() {
        return inboundFeatId;
    }

    /**
     * Setter for inboundFeatId.<p>
     */
    public void setInboundFeatId(Integer inboundFeatId) {
        this.inboundFeatId = inboundFeatId;
    }

    /**
     * Getter for inboundFeatUsageType.<p>
     */
    public String getInboundFeatUsageType() {
        return inboundFeatUsageType;
    }

    /**
     * Setter for inboundFeatUsageType.<p>
     */
    public void setInboundFeatUsageType(String inboundFeatUsageType) {
        this.inboundFeatUsageType = inboundFeatUsageType;
    }

    /**
     * Getter for score.<p>
     */
    public Integer getScore() {
        return score;
    }

    /**
     * Setter for score.<p>
     */
    public void setScore(Integer score) {
        this.score = score;
    }

    /**
     * Getter for scoreBehavior.<p>
     */
    public String getScoreBehavior() {
        return scoreBehavior;
    }

    /**
     * Setter for scoreBehavior.<p>
     */
    public void setScoreBehavior(String scoreBehavior) {
        this.scoreBehavior = scoreBehavior;
    }

    /**
     * Getter for scoreBucket.<p>
     */
    public String getScoreBucket() {
        return scoreBucket;
    }

    /**
     * Setter for scoreBucket.<p>
     */
    public void setScoreBucket(String scoreBucket) {
        this.scoreBucket = scoreBucket;
    }
}
