// Code generated by jtd-codegen for Java + Jackson v0.2.1

package com.senzing.typedef;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.util.List;

/**
 * Contains supporting information for the match key.
 */
@JsonSerialize
public class MatchKeyDetails {
    @JsonProperty("CONFIRMATIONS")
    private List<FeatureScoreInfo> confirmations;

    @JsonProperty("DENIALS")
    private List<FeatureScoreInfo> denials;

    @JsonProperty("DISCLOSED_RELATIONS")
    private List<DisclosedRelationsForMatchInfo> disclosedRelations;

    @JsonProperty("REL_ANCHOR")
    private List<RelAnchor> relAnchor;

    @JsonProperty("REL_LINKS")
    private List<RelLink> relLinks;

    @JsonProperty("REL_POINTER")
    private List<RelPointer> relPointer;

    public MatchKeyDetails() {
    }

    /**
     * Getter for confirmations.<p>
     * A list of feature data in the match key supporting the match.
     */
    public List<FeatureScoreInfo> getConfirmations() {
        return confirmations;
    }

    /**
     * Setter for confirmations.<p>
     * A list of feature data in the match key supporting the match.
     */
    public void setConfirmations(List<FeatureScoreInfo> confirmations) {
        this.confirmations = confirmations;
    }

    /**
     * Getter for denials.<p>
     * A list of feature data in the match key negating the match.
     */
    public List<FeatureScoreInfo> getDenials() {
        return denials;
    }

    /**
     * Setter for denials.<p>
     * A list of feature data in the match key negating the match.
     */
    public void setDenials(List<FeatureScoreInfo> denials) {
        this.denials = denials;
    }

    /**
     * Getter for disclosedRelations.<p>
     * A list of disclosed relationships of various types.
     */
    public List<DisclosedRelationsForMatchInfo> getDisclosedRelations() {
        return disclosedRelations;
    }

    /**
     * Setter for disclosedRelations.<p>
     * A list of disclosed relationships of various types.
     */
    public void setDisclosedRelations(List<DisclosedRelationsForMatchInfo> disclosedRelations) {
        this.disclosedRelations = disclosedRelations;
    }

    /**
     * Getter for relAnchor.<p>
     * A list of disclosed relationship anchors.
     */
    public List<RelAnchor> getRelAnchor() {
        return relAnchor;
    }

    /**
     * Setter for relAnchor.<p>
     * A list of disclosed relationship anchors.
     */
    public void setRelAnchor(List<RelAnchor> relAnchor) {
        this.relAnchor = relAnchor;
    }

    /**
     * Getter for relLinks.<p>
     * Deprecated. A list of disclosed relationships based on identical shared
     * keys.
     */
    public List<RelLink> getRelLinks() {
        return relLinks;
    }

    /**
     * Setter for relLinks.<p>
     * Deprecated. A list of disclosed relationships based on identical shared
     * keys.
     */
    public void setRelLinks(List<RelLink> relLinks) {
        this.relLinks = relLinks;
    }

    /**
     * Getter for relPointer.<p>
     * A list of disclosed relationship pointers.
     */
    public List<RelPointer> getRelPointer() {
        return relPointer;
    }

    /**
     * Setter for relPointer.<p>
     * A list of disclosed relationship pointers.
     */
    public void setRelPointer(List<RelPointer> relPointer) {
        this.relPointer = relPointer;
    }
}
