// Code generated by jtd-codegen for Java + Jackson v0.2.1

package com.senzing.typedef;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.util.List;

/**
 * A network of relationships among entities.
 */
@JsonSerialize
public class SzEngineFindNetworkByRecordIdResponse {
    @JsonProperty("ENTITIES")
    private List<Entity> entities;

    @JsonProperty("ENTITY_NETWORK_LINKS")
    private List<EntityNetworkLink> entityNetworkLinks;

    @JsonProperty("ENTITY_PATHS")
    private List<EntityPath> entityPaths;

    @JsonProperty("ENTITY_PATH_LINKS")
    private List<EntityPathLink> entityPathLinks;

    @JsonProperty("MAX_ENTITY_LIMIT_REACHED")
    private String maxEntityLimitReached;

    public SzEngineFindNetworkByRecordIdResponse() {
    }

    /**
     * Getter for entities.<p>
     * A list of entity information.
     */
    public List<Entity> getEntities() {
        return entities;
    }

    /**
     * Setter for entities.<p>
     * A list of entity information.
     */
    public void setEntities(List<Entity> entities) {
        this.entities = entities;
    }

    /**
     * Getter for entityNetworkLinks.<p>
     * A list of relationship details for all pairs of entities in the network.
     */
    public List<EntityNetworkLink> getEntityNetworkLinks() {
        return entityNetworkLinks;
    }

    /**
     * Setter for entityNetworkLinks.<p>
     * A list of relationship details for all pairs of entities in the network.
     */
    public void setEntityNetworkLinks(List<EntityNetworkLink> entityNetworkLinks) {
        this.entityNetworkLinks = entityNetworkLinks;
    }

    /**
     * Getter for entityPaths.<p>
     * A list of best path between all pairs of requested entities.
     */
    public List<EntityPath> getEntityPaths() {
        return entityPaths;
    }

    /**
     * Setter for entityPaths.<p>
     * A list of best path between all pairs of requested entities.
     */
    public void setEntityPaths(List<EntityPath> entityPaths) {
        this.entityPaths = entityPaths;
    }

    /**
     * Getter for entityPathLinks.<p>
     * A list of relationship details for all links from ENTITY_PATHS.
     */
    public List<EntityPathLink> getEntityPathLinks() {
        return entityPathLinks;
    }

    /**
     * Setter for entityPathLinks.<p>
     * A list of relationship details for all links from ENTITY_PATHS.
     */
    public void setEntityPathLinks(List<EntityPathLink> entityPathLinks) {
        this.entityPathLinks = entityPathLinks;
    }

    /**
     * Getter for maxEntityLimitReached.<p>
     * Indicates that the build-out has been truncated.
     */
    public String getMaxEntityLimitReached() {
        return maxEntityLimitReached;
    }

    /**
     * Setter for maxEntityLimitReached.<p>
     * Indicates that the build-out has been truncated.
     */
    public void setMaxEntityLimitReached(String maxEntityLimitReached) {
        this.maxEntityLimitReached = maxEntityLimitReached;
    }
}
