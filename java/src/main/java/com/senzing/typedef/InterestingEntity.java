// Code generated by jtd-codegen for Java + Jackson v0.2.1

package com.senzing.typedef;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.util.List;

/**
 * Internal use.
 */
@JsonSerialize
public class InterestingEntity {
    @JsonProperty("DEGREES")
    private Integer degrees;

    @JsonProperty("ENTITY_ID")
    private Integer entityId;

    @JsonProperty("FLAGS")
    private List<String> flags;

    @JsonProperty("SAMPLE_RECORDS")
    private List<SampleRecord> sampleRecords;

    public InterestingEntity() {
    }

    /**
     * Getter for degrees.<p>
     * Degrees of separation.
     */
    public Integer getDegrees() {
        return degrees;
    }

    /**
     * Setter for degrees.<p>
     * Degrees of separation.
     */
    public void setDegrees(Integer degrees) {
        this.degrees = degrees;
    }

    /**
     * Getter for entityId.<p>
     * The ENTITY_ID is the Senzing-generated identifier for the discovered
     * entity. It may change when new information is added.
     */
    public Integer getEntityId() {
        return entityId;
    }

    /**
     * Setter for entityId.<p>
     * The ENTITY_ID is the Senzing-generated identifier for the discovered
     * entity. It may change when new information is added.
     */
    public void setEntityId(Integer entityId) {
        this.entityId = entityId;
    }

    /**
     * Getter for flags.<p>
     * A list of ...
     */
    public List<String> getFlags() {
        return flags;
    }

    /**
     * Setter for flags.<p>
     * A list of ...
     */
    public void setFlags(List<String> flags) {
        this.flags = flags;
    }

    /**
     * Getter for sampleRecords.<p>
     * A list of ...
     */
    public List<SampleRecord> getSampleRecords() {
        return sampleRecords;
    }

    /**
     * Setter for sampleRecords.<p>
     * A list of ...
     */
    public void setSampleRecords(List<SampleRecord> sampleRecords) {
        this.sampleRecords = sampleRecords;
    }
}
